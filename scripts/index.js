/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Actor.js":
/*!**********************!*\
  !*** ./src/Actor.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Actor; });\nclass Actor extends EventTarget{\n    constructor(){\n        super();\n        this._body = new Array(); \n    }\n\n    get body(){\n        return Array.from(this._body);\n    }\n\n    draw(){}\n}\n\n//# sourceURL=webpack:///./src/Actor.js?");

/***/ }),

/***/ "./src/Apple.js":
/*!**********************!*\
  !*** ./src/Apple.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Apple; });\n/* harmony import */ var _Snake__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Snake */ \"./src/Snake.js\");\n/* harmony import */ var _Actor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Actor */ \"./src/Actor.js\");\n\n\n\nclass Apple extends _Actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\n    constructor(body){\n        super();\n\n        this._body.push({x: body[0].x, y: body[0].y, div: document.createElement('div')});\n\n        this.draw();\n    }\n\n    onCollision(game, actor, gameField){\n        if(actor instanceof _Snake__WEBPACK_IMPORTED_MODULE_0__[\"default\"]){\n            game.score = game.score + 1;\n            actor.addSegment();\n\n            let freeCell = gameField.getFreeCell();\n\n            this._body[0].x = freeCell.x;\n            this._body[0].y = freeCell.y;\n        }\n    }\n\n    draw(){\n        super.draw();\n\n        for(let i = 0; i < this._body.length; i++){\n\n            let curSegment = this._body[i];\n\n            let div = curSegment.div;\n\n            div.style.backgroundImage = 'url(../images/apple.png)';\n            div.style.backgroundPosition = 'center';\n            div.style.backgroundSize = 'cover';\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Apple.js?");

/***/ }),

/***/ "./src/Controls.js":
/*!*************************!*\
  !*** ./src/Controls.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Controls; });\nclass Controls extends EventTarget{\n    constructor(){\n        super();\n        document.onkeydown = this.keyPress.bind(this);\n    }\n\n    keyPress(event){\n        let eventName = 'Keyboard';\n        let detail = {};\n\n        switch(event.code){\n            case 'ArrowUp':\n            case 'KeyW'     : detail.key = 'Up'; break;\n            case 'ArrowDown': \n            case 'KeyS'     : detail.key = 'Down'; break;\n            case 'ArrowLeft':\n            case 'KeyA'     : detail.key = 'Left'; break;\n            case 'ArrowRight':\n            case 'KeyD'     : detail.key = 'Right'; break;\n            case 'Digit1'   : detail.key = 'Num1'; break;\n            case 'Digit2'   : detail.key = 'Num2'; break;\n            case 'Digit3'   : detail.key = 'Num3'; break;\n            case 'Digit4'   : detail.key = 'Num4'; break;\n            case 'Digit5'   : detail.key = 'Num5'; break;\n            case 'Digit6'   : detail.key = 'Num6'; break;\n            case 'Digit7'   : detail.key = 'Num7'; break;\n            case 'Digit8'   : detail.key = 'Num8'; break;\n            case 'Digit9'   : detail.key = 'Num9'; break;\n            case 'Digit0'   : detail.key = 'Num0'; break;\n            case 'Escape'   : detail.key = 'Escape'; break;\n            case 'Enter'    : detail.key = 'Enter'; break;\n        }\n\n        if(detail.key != undefined){\n            this.dispatchEvent(new CustomEvent(eventName, {detail: detail}));\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Controls.js?");

/***/ }),

/***/ "./src/Game.js":
/*!*********************!*\
  !*** ./src/Game.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Game; });\n/* harmony import */ var _SinglePlayer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SinglePlayer */ \"./src/SinglePlayer.js\");\n/* harmony import */ var _Controls__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Controls */ \"./src/Controls.js\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Menu */ \"./src/Menu.js\");\n\n\n// import Scene from './Scene';\n// import GameOverScreen from './GameOverScreen';\n\n\nclass Game extends EventTarget{\n    constructor(columnsCount, rowsCount){\n        super();\n        \n        if(document.getElementById('game') == undefined){\n            let gameDiv = document.createElement('div');\n\n            gameDiv.id = 'game';\n            \n            let gameDivSize = this.getDisplaySize(480, 640);\n            gameDiv.style.width = gameDivSize.width;\n            gameDiv.style.height = gameDivSize.height;\n            gameDiv.style.backgroundColor = 'black';\n\n            document.body.appendChild(gameDiv);\n        }\n\n        this._div = document.getElementById('game');\n        this._div.style.marginTop = (document.body.clientHeight - this._div.clientHeight)/2;\n        this._div.style.marginLeft = (document.body.clientWidth - this._div.clientWidth)/2;\n\n        this._controls = new _Controls__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        this._controls.addEventListener('Keyboard', this.onKeyboardEvent.bind(this));\n\n        this._currentScene = undefined;\n        \n        let choicesGameOver = [\n            {name: 'retry', title: 'Retry'},\n            {name: 'quit', title: 'Quit'},\n        ];\n        \n        let choicesStartScreen = [\n            {name: 'singleplayer', title: 'Single player'},\n            // {name: 'settings', title: 'Settings'},\n        ];\n        \n        let choicesPauseScreen = [\n            {name: 'restart', title: 'Restart'},\n            {name: 'continue', title: 'Continue'},\n            {name: 'quit', title: 'Quit'},\n        ];\n\n        this._scenes = {\n            StartScreen : new _Menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('start-screen', this._div, Array.from(choicesStartScreen)),\n            SinglePlayer : new _SinglePlayer__WEBPACK_IMPORTED_MODULE_0__[\"default\"](columnsCount, rowsCount, this._div),\n            GameOverScreen : new _Menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('game-over', this._div, Array.from(choicesGameOver)),\n            PauseScreen : new _Menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('pause', this._div, Array.from(choicesPauseScreen))\n        }\n\n        this._scenes.StartScreen.title = 'Pr. SNAKE';\n        this._scenes.StartScreen.subtitle = '';\n        this._scenes.GameOverScreen.title = 'GAME OVER';\n        this._scenes.PauseScreen.title = 'PAUSE';\n        this._scenes.PauseScreen.subtitle = '';\n\n        this.changeCurrentScene(this._scenes.StartScreen);\n    };\n\n    getDisplaySize(defaultWidth, defaultHeight){\n        let documentWidth = document.documentElement.clientWidth;\n        let documentHeight = document.documentElement.clientHeight;\n        let K = documentWidth / documentHeight;\n        let k = 1;\n\n        if(K > 1){\n            k = documentHeight > defaultHeight ? 1 : documentHeight / defaultHeight;\n        } else {\n            k = documentWidth > defaultWidth ? 1 : documentWidth / defaultWidth;    \n        }\n\n        return {\n            width : defaultWidth * k,\n            height : defaultHeight * k\n        }\n    }\n\n    onKeyboardEvent(event){\n        this._currentScene.onKeyboardEvent(event);\n    }\n\n    changeCurrentScene(newScene){\n        if(this._currentScene != undefined){\n            this._currentScene.removeEventListener('StateChanging', this.onSceneStateChanging.bind(this));\n            this._currentScene.removeEventListener('OnStop', this.onSceneStop.bind(this));\n            this._currentScene.removeEventListener('OnStart', this.onSceneStart.bind(this));\n            this._currentScene.removeEventListener('OnPause', this.onScenePause.bind(this));\n        }\n\n        this._currentScene = newScene;\n        this._currentScene.start();\n\n        this._currentScene.addEventListener('StateChanging', this.onSceneStateChanging.bind(this));\n        this._currentScene.addEventListener('OnStop', this.onSceneStop.bind(this));\n        this._currentScene.addEventListener('OnStart', this.onSceneStart.bind(this));\n        this._currentScene.addEventListener('OnPause', this.onScenePause.bind(this));\n    }\n\n    onSceneStateChanging(event){}\n    onSceneStop(event){\n        let scene = event.target;\n        let sceneId = scene.id;\n\n        if(sceneId == this._scenes.SinglePlayer.id){\n            let score = scene.score;\n\n            this._scenes.GameOverScreen.reset();\n            this._scenes.GameOverScreen.subtitle = `Score: ${score}`;\n\n            this.changeCurrentScene(this._scenes.GameOverScreen);\n        }\n\n        if(sceneId == this._scenes.GameOverScreen.id){\n            if(scene.choice == 'retry'){\n                this._scenes.SinglePlayer.reset();\n                this.changeCurrentScene(this._scenes.SinglePlayer);\n            }\n\n            if(scene.choice == 'quit'){\n                this._scenes.StartScreen.reset();\n                this.changeCurrentScene(this._scenes.StartScreen);\n            }\n        }\n\n        if(sceneId == this._scenes.StartScreen.id){\n            if(scene.choice == 'singleplayer'){\n                this._scenes.SinglePlayer.reset();\n                this.changeCurrentScene(this._scenes.SinglePlayer);\n            }\n\n            if(scene.choice == 'settings'){\n                this._scenes.StartScreen.reset();\n                this.changeCurrentScene(this._scenes.StartScreen);\n            }\n        }\n\n        if(sceneId == this._scenes.PauseScreen.id){\n            if(scene.choice == 'continue'){\n                this.changeCurrentScene(this._scenes.SinglePlayer);\n            }\n\n            if(scene.choice == 'restart'){\n                this._scenes.SinglePlayer.reset();\n                this.changeCurrentScene(this._scenes.SinglePlayer);\n            }\n\n            if(scene.choice == 'quit'){\n                this._scenes.StartScreen.reset();\n                this.changeCurrentScene(this._scenes.StartScreen);\n            }\n        }\n    }\n    onSceneStart(event){}\n    onScenePause(event){\n        let scene = event.target;\n        let sceneId = scene.id;\n\n        if(sceneId == this._scenes.SinglePlayer.id){\n            this.changeCurrentScene(this._scenes.PauseScreen);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Game.js?");

/***/ }),

/***/ "./src/GameField.js":
/*!**************************!*\
  !*** ./src/GameField.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GameField; });\n/* harmony import */ var _Mathematic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Mathematic */ \"./src/Mathematic.js\");\n\n\nfunction matrix(columnCount, rowsCount, defaultValue) {\n    let r = new Array(rowsCount);\n\n    for(let y = 0; y < rowsCount; y++){\n        let rr = new Array(columnCount);\n\n        for(let x = 0; x < columnCount; x++){\n            rr[x] = defaultValue;\n        }\n\n        r[y] = rr;\n    }\n\n    return r;\n}\n\nclass GameField{\n    constructor(columnsCount, rowsCount){\n        this._field = matrix(columnsCount, rowsCount, true);\n\n        this._freeCells = new Array();\n\n        this.refresh([], true);\n    }\n\n    get columnsCount(){\n        return this._field[0].length;\n    }\n\n    get rowsCount(){\n        return this._field.length;\n    }\n\n    takeСell(cell){\n        this._field[cell.y][cell.x] = false;\n\n        this._searchFreeCell();\n    }\n\n    isFreeCell(segment){\n        return this._field[segment.y][segment.x];\n    }\n\n    getFreeCell(){\n        return this._freeCells[_Mathematic__WEBPACK_IMPORTED_MODULE_0__[\"default\"].random(0, this._freeCells.length - 1)];\n    }\n\n    refresh(segments, cleanBefore = false){\n        if(cleanBefore){\n            this._clean();\n        }\n\n        for(let segmentIndex = 0; segmentIndex < segments.length; segmentIndex++){\n            let segment = segments[segmentIndex];\n\n            this._field[segment.y][segment.x] = false;\n        }\n\n        this._searchFreeCell();\n    }\n\n    _clean(){\n        for(let y = 0; y < this._field.length; y++){\n            for(let x = 0; x < this._field[y].length; x++){\n                this._field[y][x] = true;\n            }\n        }\n\n        this._freeCells = new Array();\n    }\n\n    _searchFreeCell(){\n        this._freeCells = new Array();\n\n        for(let y = 0; y < this.rowsCount; y++){\n            for(let x = 0; x < this.columnsCount; x++){\n                if(this._field[y][x]){\n                    this._freeCells.push({x : x, y : y});\n                }\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/GameField.js?");

/***/ }),

/***/ "./src/Mathematic.js":
/*!***************************!*\
  !*** ./src/Mathematic.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Mathematic; });\nclass Mathematic {\n    static random (min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n\n//# sourceURL=webpack:///./src/Mathematic.js?");

/***/ }),

/***/ "./src/Menu.js":
/*!*********************!*\
  !*** ./src/Menu.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Menu; });\n/* harmony import */ var _Scene__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scene */ \"./src/Scene.js\");\n\n\nclass Menu extends _Scene__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(name, display, choices){\n        super(`menu-${name}`, display);\n\n        // this._title = title;\n        // this._subtitle = subtitle;\n        this._choices = choices;\n\n        let w = display.clientWidth;\n        let h = display.clientHeight;\n\n        this._screen.style.position = 'absolute';\n        this._screen.style.width = w;\n        this._screen.style.height = h;\n        this._screen.style.border = '3px solid rgb(224, 224, 192)';\n        this._screen.style.boxShadow = '0 0 3px rgb(224, 224, 192)';\n\n        this._screen.innerHTML = \n                                `<div class=\"content\" style=\"text-align: center; color: rgb(224, 224, 192)\">\n                                    <div class=\"title\" style=\"margin:0 0 20 0; font-size: 20px\">MENU</div>\n                                    <div class=\"subtitle\" style=\"margin:10 0 10 0; font-size: 17px\">This is menu</div>\n                                    ${choices.map(function(element){return `<div class=\"${element.name} choice\" style=\"padding: 5 0 5 0; font-size: 14px\">${element.title}</div>`;}).join('')}\n                                </div>`;\n\n        let contentDiv = this._screen.getElementsByClassName('content')[0];\n        contentDiv.style.marginTop = (this._screen.clientHeight - contentDiv.clientHeight)*0.5;\n        contentDiv.style.width = this._screen.clientWidth*0.5;\n        contentDiv.style.marginLeft = (this._screen.clientWidth - contentDiv.clientWidth)/2;\n\n        this.choice = this._choices[0].name;\n    }\n\n    onKeyboardEvent(event){\n        super.onKeyboardEvent(event);\n\n        let key = event.detail.key;\n\n        switch(key){\n            case 'Up'   : this.changeChoice('Up'); break;\n            case 'Down' : this.changeChoice('Down'); break;\n            case 'Enter' : this.stop(); break;\n        }\n    }\n\n    set choice(newValue){\n        Array.from(this._screen.getElementsByClassName('choice')).forEach(function(element){\n            element.style.color = 'rgb(224, 224, 192)';\n            element.style.backgroundColor = 'black';\n        });\n\n        this._screen.getElementsByClassName(newValue)[0].style.color = 'black';\n        this._screen.getElementsByClassName(newValue)[0].style.backgroundColor = 'rgb(224, 224, 192)';\n\n        this._selectedChoiceName = newValue;\n    }\n\n    set title(newTitle){\n        this._screen.getElementsByClassName('title')[0].innerHTML = newTitle;\n    }\n    \n    set subtitle(newSubtitle){\n        this._screen.getElementsByClassName('subtitle')[0].innerHTML = newSubtitle;\n    }\n\n    get choice(){\n        return this._selectedChoiceName;\n    }\n\n    reset(){\n        super.reset();\n\n        this.choice = this._choices[0].name;\n    }\n\n    changeChoice(course){\n\n        let currentChoiceIndex = this._choices.findIndex(function(element){return element.name == this}, this._selectedChoiceName);\n\n        if(course == 'Up'){\n            if(currentChoiceIndex == 0){\n                this.choice = this._choices[this._choices.length - 1].name;\n            } else {\n                this.choice = this._choices[currentChoiceIndex - 1].name;\n            }\n        } else {\n            if(currentChoiceIndex == this._choices.length - 1){\n                this.choice = this._choices[0].name;\n            } else {\n                this.choice = this._choices[currentChoiceIndex + 1].name;\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Menu.js?");

/***/ }),

/***/ "./src/Portal.js":
/*!***********************!*\
  !*** ./src/Portal.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Portal; });\n/* harmony import */ var _Snake__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Snake */ \"./src/Snake.js\");\n/* harmony import */ var _Actor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Actor */ \"./src/Actor.js\");\n/* harmony import */ var _Mathematic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Mathematic */ \"./src/Mathematic.js\");\n\n\n\n\nlet curGameField = undefined;\n\nclass Portal extends _Actor__WEBPACK_IMPORTED_MODULE_1__[\"default\"]{\n    constructor(body){\n        super();\n\n        for(let i = 0; i < body.length; i++){\n            this._body.push({x: body[i].x, y: body[i].y, div: document.createElement('div')});\n        }\n\n        this.buffer = {};\n    }\n\n    resetBody(){\n        for(let i = 0; i < 2; i++){\n            let freeCell = curGameField.getFreeCell();\n\n            this._body.push({x: freeCell.x, y: freeCell.y, div: document.createElement('div')});\n        }\n\n        this.draw();\n    }\n\n    clearBody(){\n        for(let i = this._body.length - 1; i >= 0; i--){\n            this._body[i].div.remove();\n            this._body[i].div = null;\n            this._body.splice(i, 1);\n        }\n    }\n\n    onCollision(game, actor, gameField){\n        if(curGameField == undefined){\n            curGameField = gameField;\n        }\n\n        if(actor instanceof _Snake__WEBPACK_IMPORTED_MODULE_0__[\"default\"]){\n            for(let i = 0; i < this._body.length; i++){\n                if(this._body[i].x == actor._body[0].x && this._body[i].x == actor._body[0].x){\n                    actor.addEventListener('PrevStep', \n                                            this.goThroughThePortalPrev.bind(\n                                                this, \n                                                actor, \n                                                this._body[(i + 1)%2].x, \n                                                this._body[(i + 1)%2].y), \n                                            {once : true})\n                    this.clearBody();\n                    break;\n                }\n            }\n        }\n    }\n\n    goThroughThePortalPrev(snake, x, y){\n        this.buffer['oldDirection'] = snake.direction;\n        \n        snake.direction = {\n            x: x - snake.head.x,\n            y: y - snake.head.y\n        };        \n\n        snake.addEventListener('Step', this.goThroughThePortal.bind(this, snake), {once:true})\n    }\n\n    goThroughThePortal(snake, x, y){\n        snake.direction = {\n            x: this.buffer.oldDirection.x,\n            y: this.buffer.oldDirection.y,\n        }\n\n        setTimeout(this.resetBody.bind(this), _Mathematic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].random(1000, 10000));\n    }\n\n    draw(){\n\n        if(this._body.length == 0){\n            return;\n        }\n        \n        this._body[0].div.style.borderColor = 'rgb(64, 64, 192)';\n        this._body[0].div.style.borderStyle = 'solid';\n        this._body[0].div.style.boxSizing = 'border-box';\n        this._body[0].div.style.borderWidth = '2px';\n        \n        this._body[1].div.style.borderColor = 'rgb(224, 96, 0)';\n        this._body[1].div.style.borderStyle = 'solid';\n        this._body[1].div.style.boxSizing = 'border-box';\n        this._body[1].div.style.borderWidth = '2px';\n    }\n}\n\n//# sourceURL=webpack:///./src/Portal.js?");

/***/ }),

/***/ "./src/Renderer.js":
/*!*************************!*\
  !*** ./src/Renderer.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Renderer; });\n/* harmony import */ var _Mathematic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Mathematic */ \"./src/Mathematic.js\");\n\n\nclass Renderer extends EventTarget{\n    constructor(columnsCount, rowsCount, visibleAreaWidth, visibleAreaHeight, viewPortDiv){\n        super();\n\n        this._segmentWidth = 20;\n        this._segmentHeight = 20;\n        this._minSegmentCountToEdge = 4;\n        this._visibleArea = { x : 0, y : 0, minX : 0, maxX : 0, minY : 0, maxY : 0 };\n\n        this._visibleAreaWidth = visibleAreaWidth;\n        this._visibleAreaHeight = visibleAreaHeight;\n\n        this._viewPortDiv = viewPortDiv;\n\n        let au = document.createElement('div');\n        au.id = 'arrow-up';\n        au.classList.add('arrow');\n        let ad = document.createElement('div');\n        ad.id = 'arrow-down';\n        ad.classList.add('arrow');\n        let al = document.createElement('div');\n        al.id = 'arrow-left';\n        al.classList.add('arrow');\n        let ar = document.createElement('div');\n        ar.id = 'arrow-right';\n        ar.classList.add('arrow');\n        \n        this._viewPortDiv.appendChild(au);\n        this._viewPortDiv.appendChild(ad);\n        this._viewPortDiv.appendChild(al);\n        this._viewPortDiv.appendChild(ar);\n\n        this._viewPortDiv.style.width = this._visibleAreaWidth;\n        this._viewPortDiv.style.height = this._visibleAreaHeight;\n        this._viewPortDiv.style.overflow = 'hidden';\n\n        this._arrows = {\n            up:     document.getElementById('arrow-up'),\n            down:   document.getElementById('arrow-down'),\n            left:   document.getElementById('arrow-left'),\n            right:  document.getElementById('arrow-right'),\n        }\n\n        this._fieldDiv = document.createElement('div');\n        this._fieldDiv.style.position = 'relative';\n        this._fieldDiv.style.border = '1px solid rgb(0, 224, 0)';\n        this._fieldDiv.style.boxShadow = '0 0 10px rgb(0, 224, 0)';\n        this._fieldDiv.style.webkitBoxShadow = '0 0 10px rgb(0, 224, 0)';\n        this._fieldDiv.style['-webkit-transition'] = 'all 0.3s ease-out';\n        this._viewPortDiv.append(this._fieldDiv);\n\n        this._fieldDiv.style.width = columnsCount*this._segmentWidth;\n        this._fieldDiv.style.height = rowsCount*this._segmentHeight;\n\n        this.setupViewPortPosition();\n    }\n\n    addSegment(event){\n        let body = event.detail;\n\n        for(let segmentIndex = 0; segmentIndex < body.length; segmentIndex++){\n            let segment = body[segmentIndex]; \n\n            if(segment.div == null){\n                let div = document.createElement('div');\n\n                div.style.position = 'absolute';\n                div.style.width = this._segmentWidth;\n                div.style.height = this._segmentHeight;\n                div.style.left = segment.x*this._segmentWidth;\n                div.style.top = segment.y*this._segmentHeight;\n                div.style.transformOrigin = 'center center';\n\n                this._fieldDiv.append(div);\n\n                segment.div = div;\n            }\n        }\n    }\n\n    refresh(segments, cleanBefore = false){\n        if(cleanBefore){\n            this._clean();\n        }\n\n        for(let segmentIndex = 0; segmentIndex < segments.length; segmentIndex++){\n            let segment = segments[segmentIndex];\n            let div = segment.div;\n\n            div.style.position = 'absolute';\n            div.style.width = this._segmentWidth;\n            div.style.height = this._segmentHeight;\n            div.style.left = segment.x*this._segmentWidth;\n            div.style.top = segment.y*this._segmentHeight;\n            div.style.transformOrigin = 'center center';\n\n            this._fieldDiv.appendChild(segment.div);\n        }\n    }\n\n    _clean(){\n        let childList = this._fieldDiv.childNodes;\n\n        for(let i = 0; i < childList.length; i++){\n            this._fieldDiv.removeChild(childList[i]);\n        }\n    }\n\n    showArrows(){\n        if(this._fieldDiv.clientWidth + Number(this._fieldDiv.style.left.replace('px', '')) > this._viewPortDiv.clientWidth){\n            this._arrows.right.style.opacity = 0.5;\n        } else {\n            this._arrows.right.style.opacity = 0.0;\n        }\n\n        if(Number(this._fieldDiv.style.left.replace('px', '')) < 0){\n            this._arrows.left.style.opacity = 0.5;\n        } else {\n            this._arrows.left.style.opacity = 0.0;\n        }\n        \n        if(this._fieldDiv.clientHeight + Number(this._fieldDiv.style.top.replace('px', '')) > this._viewPortDiv.clientHeight){\n            this._arrows.down.style.opacity = 0.5;\n        } else {\n            this._arrows.down.style.opacity = 0.0;\n        }\n\n        if(Number(this._fieldDiv.style.top.replace('px', '')) < 0){\n            this._arrows.up.style.opacity = 0.5;\n        } else {\n            this._arrows.up.style.opacity = 0.0;\n        }\n    }\n\n    setupViewPortPosition(){\n        this.moveViewPort(0, 0);\n    }\n\n    moveViewPort(x, y){\n        this.resetVisibleArea(x, y);\n\n        this._fieldDiv.style.left = -x * this._segmentWidth;\n        this._fieldDiv.style.top = -y * this._segmentHeight;\n\n        this.showArrows();\n    }\n\n    resetVisibleArea(x, y){\n        this._visibleArea.x = x;\n        this._visibleArea.y = y;\n        this._visibleArea.minX = this._visibleArea.x + 4;\n        this._visibleArea.maxX = this._visibleArea.x + (this._visibleAreaWidth/this._segmentWidth - 1) - 4;\n        this._visibleArea.minY = this._visibleArea.y + 4;\n        this._visibleArea.maxY = this._visibleArea.y + (this._visibleAreaHeight/this._segmentHeight - 1) - 4;\n\n        this.dispatchEvent(new Event('ChangeVisibleArea'));\n    }\n\n    needViewPortRemoving(Coord){\n        let minX = this._visibleArea.minX;\n        let maxX = this._visibleArea.maxX;\n        let minY = this._visibleArea.minY;\n        let maxY = this._visibleArea.maxY;\n\n        return Coord.x < minX || Coord.x > maxX || Coord.y < minY || Coord.y > maxY;\n    }\n\n    moveViewPortOnStep(event){\n        let head = event.detail[0]; \n\n        if(this.needViewPortRemoving(head)){\n            let hx = head.x;\n            let hy = head.y;\n            let minX = this._visibleArea.minX;\n            let minY = this._visibleArea.minY;\n            let maxX = this._visibleArea.maxX;\n            let maxY = this._visibleArea.maxY;\n            let minSCRE = this._minSegmentCountToEdge;\n            let vSOWC = this._visibleAreaWidth/this._segmentWidth;\n            let vSOHC = this._visibleAreaHeight/this._segmentHeight;\n\n            let x = this._visibleArea.x;\n            let y = this._visibleArea.y;\n            \n            x = hx > maxX ? hx + minSCRE - (vSOWC - 1) : x;            \n            x = hx < minX ? hx - minSCRE : x;            \n            y = hy > maxY ? hy + minSCRE - (vSOHC - 1) : y;\n            y = hy < minY ? hy - minSCRE : y;\n\n            this.moveViewPort(x, y);\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Renderer.js?");

/***/ }),

/***/ "./src/Scene.js":
/*!**********************!*\
  !*** ./src/Scene.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Scene; });\nconst STATES = Object({'CREATED': 0, 'EXECUTING': 1, 'PAUSED': 2, 'STOPPED':3});\n\nlet nameList = new Array;\n\nclass Scene extends EventTarget{\n    constructor(nameID, display){\n        super();\n\n        if(nameID == undefined || nameID == ''){\n            nameID = Date.now().toString();\n        }\n\n        if(nameList.indexOf(nameID) != -1){\n            nameID += Date.now().toString();\n        }\n\n        nameList.push(nameID);\n\n        this._screen = document.createElement('div');\n        this._screen.style.position = 'absolute';\n        this._screen.style.opacity = 0;\n        this._screen.style.boxSizing = 'border-box';\n\n        this._state = STATES.CREATED;\n        this._id = nameID;\n\n        display.appendChild(this._screen);\n    }\n\n    stop(){\n        this.state = STATES.STOPPED;\n        this.dispatchEvent(new CustomEvent('OnStop'));\n    }\n    \n    start(){\n        this.state = STATES.EXECUTING;\n        this.dispatchEvent(new CustomEvent('OnStart'));\n    }\n\n    pause(){\n        this.state = STATES.PAUSED;\n        this.dispatchEvent(new CustomEvent('OnPause'));\n    }\n    \n    reset(){\n        this.state = STATES.CREATED;\n        this.dispatchEvent(new CustomEvent('OnReset'));\n    }\n\n    get state(){\n        return this._state;\n    }\n\n    get id(){\n        return this._id;\n    }\n\n    onKeyboardEvent(event){}\n\n    set state(newValue){\n        if(newValue != 1){\n            this._screen.style.opacity = 0;\n        } else {\n            this._screen.style.opacity = 1;\n        }\n\n        this.dispatchEvent(new CustomEvent('StateChanging', {detail: {oldState: this._state, newState: newValue,}}));\n\n        this._state = newValue;\n    }\n}\n\n//# sourceURL=webpack:///./src/Scene.js?");

/***/ }),

/***/ "./src/SinglePlayer.js":
/*!*****************************!*\
  !*** ./src/SinglePlayer.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SinglePlayer; });\n/* harmony import */ var _Scene__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Scene */ \"./src/Scene.js\");\n/* harmony import */ var _Snake__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Snake */ \"./src/Snake.js\");\n/* harmony import */ var _Apple__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Apple */ \"./src/Apple.js\");\n/* harmony import */ var _Renderer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Renderer */ \"./src/Renderer.js\");\n/* harmony import */ var _GameField__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GameField */ \"./src/GameField.js\");\n/* harmony import */ var _Portal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Portal */ \"./src/Portal.js\");\n\n\n\n\n\n\n\nclass SinglePlayer extends _Scene__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(columnsCount, rowsCount, display){\n        super('single-player', display);\n\n        this._screen.style.border = '3px solid rgb(0, 224, 0)';\n        this._screen.style.boxShadow = '0 0 3px rgb(0, 224, 0)';\n\n        this._mainCycleIntervalIDID = -1;\n        this._gameField = new _GameField__WEBPACK_IMPORTED_MODULE_4__[\"default\"](columnsCount, rowsCount);\n        this._renderer = new _Renderer__WEBPACK_IMPORTED_MODULE_3__[\"default\"](columnsCount, rowsCount, display.clientWidth, display.clientHeight, this._screen);\n        \n        let freeCell = this._gameField.getFreeCell();\n        this._gameField.takeСell(freeCell);\n        this._player = new _Snake__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([freeCell]);\n\n        this.maxY = rowsCount - 1;\n        this.maxX = columnsCount - 1;\n        \n        this._score = {\n            value: 0,\n            div : document.createElement('div')\n        };\n        this._score.div = document.createElement('div');\n        // this._score.div.innerText = `${this._score.value}`;\n        this._score.div.style.zIndex = 2;\n        this._score.div.style.position = 'absolute';\n        this._score.div.style.left = 0;\n        this._score.div.style.top = 0;\n        this._score.div.style.color = 'rgba(224, 192, 128, 0.8)';\n        this._score.div.style.padding = '10px';\n        this._screen.appendChild(this._score.div);\n        this.score = 0;\n\n        this._actors = new Array();\n\n        this._actors.push(this._player);\n\n        this._player.addEventListener('GrowUp', this.PlayerOnGrowUp.bind(this));\n        this._player.addEventListener('Step', this.goThroughWalls.bind(this));\n        this._player.addEventListener('Step', this._renderer.moveViewPortOnStep.bind(this._renderer));\n        this._player.addEventListener('Death', this.stop.bind(this));\n\n        freeCell = this._gameField.getFreeCell();\n        this._gameField.takeСell(freeCell);\n        this._actors.push(new _Apple__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([freeCell]));\n\n        let freeCells = [this._gameField.getFreeCell(), this._gameField.getFreeCell()];\n        freeCells.forEach(function(element){this.takeСell(element)}, this._gameField);        \n        this._actors.push(new _Portal__WEBPACK_IMPORTED_MODULE_5__[\"default\"](freeCells));\n    }\n\n    PlayerOnGrowUp(event){\n        let body = event.detail;\n\n        this._gameField.refresh(body);\n    }\n\n    reset(){\n        this._gameField.refresh([], true);\n        this._renderer.refresh([], true);\n        \n        let freeCell = this._gameField.getFreeCell();\n        this._gameField.takeСell(freeCell);\n        this._player = new _Snake__WEBPACK_IMPORTED_MODULE_1__[\"default\"]([freeCell]);\n        \n        this.score = 0;\n        \n        this._actors = new Array();\n        this._actors.push(this._player);\n        this._player.addEventListener('GrowUp', this.PlayerOnGrowUp.bind(this));\n        this._player.addEventListener('Step', this.goThroughWalls.bind(this));\n        this._player.addEventListener('Step', this._renderer.moveViewPortOnStep.bind(this._renderer));\n        this._player.addEventListener('Death', this.stop.bind(this));\n\n        freeCell = this._gameField.getFreeCell();\n        this._gameField.takeСell(freeCell);\n        this._actors.push(new _Apple__WEBPACK_IMPORTED_MODULE_2__[\"default\"]([freeCell]));        \n        \n        let freeCells = [this._gameField.getFreeCell(), this._gameField.getFreeCell()];\n        freeCells.forEach(function(element){this.takeСell(element)}, this._gameField);        \n        this._actors.push(new _Portal__WEBPACK_IMPORTED_MODULE_5__[\"default\"](freeCells));\n\n        super.reset();\n    }\n\n    stop(){\n        this.stopMainCycle();\n\n        super.stop();\n    }\n\n    start(){\n        if(this._mainCycleIntervalIDID == -1){\n            this.startMainCycle();\n        }\n\n        super.start();\n    }\n\n    startMainCycle(){\n        this._mainCycleIntervalIDID = setInterval(this.mainCycleIteration.bind(this), 100);\n    }\n\n    mainCycleIteration(){\n        if(this._state == 1){\n            this._player.makeStep();\n            this.collisionControl();\n\n            this._actors.forEach((element) => {element.draw();});\n\n            let allSegments = this._actors.map(element => element.body).flat();\n            \n            this._gameField.refresh(allSegments, true);\n            this._renderer.refresh(allSegments, true);\n        }\n    }\n\n    stopMainCycle(){\n        clearInterval(this._mainCycleIntervalID);\n    }\n\n    pause(){\n        super.pause();\n    }\n\n    onKeyboardEvent(event){\n        super.onKeyboardEvent(event);\n\n        let key = event.detail.key;\n\n        switch(key){\n            case 'Left' : this._actors[0].changeDirection({x: -1, y: 0}); break;\n            case 'Right': this._actors[0].changeDirection({x: 1, y: 0}); break;\n            case 'Up'   : this._actors[0].changeDirection({x: 0, y: -1}); break;\n            case 'Down' : this._actors[0].changeDirection({x: 0, y: 1}); break;\n            case 'Num1' : this._actors[0].addSegment(); break;\n            case 'Escape' : this.pause(); break;\n        }\n    }\n\n    set score(value){\n        this._score.value = value;\n        this._score.div.innerText = `Score: ${this._score.value}`;\n    }\n\n    get score(){\n        return this._score.value;\n    }\n\n    goThroughWalls(event){\n        let segments = event.detail;\n\n        for(let segmentIndex = 0; segmentIndex < segments.length; segmentIndex++){\n            let segment = segments[segmentIndex];\n\n            if(segment.x < 0){\n                segment.x = this._gameField.columnsCount - 1;\n            }\n\n            if(segment.x >= this._gameField.columnsCount){\n                segment.x = 0;\n            }\n            \n            if(segment.y < 0){\n                segment.y = this._gameField.rowsCount - 1;\n            }\n\n            if(segment.y >= this._gameField.rowsCount){\n                segment.y = 0;\n            }\n        }\n    }\n\n    collisionControl(){\n        for(let i = 0; i < this._actors.length; i++){\n            for(let e = i; e < this._actors.length; e++){\n                let fActor = this._actors[i];\n                let sActor = this._actors[e];\n\n                function isCollision(fBody, sBody){\n                    for(let fi = 0; fi < fBody.length; fi++){\n                        for(let si = 0; si < sBody.length; si++){\n                            if(fActor.body[fi].x == sActor.body[si].x && fActor.body[fi].y == sActor.body[si].y){\n                                return true;\n                            }\n                        }\n                    }\n\n                    return false;\n                }\n\n                if(isCollision(fActor.body, sActor.body)){\n                    fActor.onCollision(this, sActor, this._gameField);\n                    sActor.onCollision(this, fActor, this._gameField);\n                }\n            }\n        }\n    }\n};\n\n//# sourceURL=webpack:///./src/SinglePlayer.js?");

/***/ }),

/***/ "./src/Snake.js":
/*!**********************!*\
  !*** ./src/Snake.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Snake; });\n/* harmony import */ var _Actor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Actor */ \"./src/Actor.js\");\n\n\nclass Snake extends _Actor__WEBPACK_IMPORTED_MODULE_0__[\"default\"]{\n    constructor(_body){\n        super();\n        this.lastPlace = {x:0, y:0};\n        this.millisecondsPerStep = 200;\n        this.alive = true;\n\n        for(let i = 0; i < _body.length; i++){\n            this._body.push({x : _body[i].x, y : _body[i].y, div: document.createElement('div')})\n        }\n\n        this.direction = {\n            x: 0, \n            y: 1\n        };\n    }\n\n    get head(){\n        return this._body[0];\n    }\n\n    kill(){\n        if(this.alive){\n            this.stop();\n            this.dispatchEvent(new Event('Death'));\n            this.alive = false;\n        }\n    }\n\n    move(){\n        this.intervalId = setInterval(this.makeStep.bind(this), this.millisecondsPerStep);\n    }\n\n    stop(){\n        clearInterval(this.intervalId);\n    }\n\n    addSegment(){\n        this._body.push({x:this.lastPlace.x, y: this.lastPlace.y, div:document.createElement('div')});\n\n        this.dispatchEvent(new CustomEvent('GrowUp', {detail: this._body}));\n    }\n\n    makeStep(){\n        this.dispatchEvent(new CustomEvent('PrevStep', {detail: this._body}));\n\n        this.lastPlace.x = this._body[this._body.length - 1].x;\n        this.lastPlace.y = this._body[this._body.length - 1].y;\n\n        for(let i = this._body.length - 1; i > 0; i--){\n            let curSegment = this._body[i];\n            let prevSergment = this._body[i - 1];\n            curSegment.x = prevSergment.x;\n            curSegment.y = prevSergment.y;\n        }\n\n        this._body[0].x += this.direction.x;\n        this._body[0].y += this.direction.y;\n\n        this.dispatchEvent(new CustomEvent('Step', {detail: this._body}));\n\n        this.draw();\n    }\n    \n    changeDirection(newDirection){\n        let firstSegment = this._body[0];\n        let secondSegment = this._body[1];\n\n        if(secondSegment != undefined){\n\n            if(firstSegment.x + newDirection.x == secondSegment.x ||\n                firstSegment.y + newDirection.y == secondSegment.y){\n                return;\n            }\n        }\n\n        let detail = {\n            oldDirection: this.direction,\n            newDirection: newDirection\n        }\n\n        this.direction = newDirection;\n\n        this.dispatchEvent(new CustomEvent('ChangeDirection', {detail: detail}));\n    }\n\n    draw(){\n        super.draw();\n\n        for(let i = this._body.length - 1; i >= 0; i--){\n\n            let curSegment = this._body[i];\n\n            let div = curSegment.div;\n\n            if(i == 0){\n                div.style.backgroundImage = 'url(../images/snakeHead.png)';\n                div.style.zIndex = 1;\n\n            } else {\n                div.style.backgroundImage = 'url(../images/snakeBody.png)';\n                div.style.zIndex = 0;\n            }\n\n            div.style.backgroundPosition = 'center';\n            div.style.backgroundSize = 'cover';\n        }\n    }\n\n    onCollision(game, actor, gameField){\n        if(actor instanceof Snake){\n            if(this === actor){\n                for(let i = 1; i < this._body.length; i++){\n                    if(this._body[0].x == this._body[i].x && this._body[0].y == this._body[i].y){\n                        this.kill();\n                    }\n                }\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack:///./src/Snake.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Game */ \"./src/Game.js\");\n\n\nwindow.onload = function(event){\n    let game = new _Game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](30, 40);\n}\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });